[{"/home/ubox57/Videos/socketProject/client/src/index.js":"1","/home/ubox57/Videos/socketProject/client/src/reportWebVitals.js":"2","/home/ubox57/Videos/socketProject/client/src/App.js":"3","/home/ubox57/Videos/socketProject/client/src/UserContext.js":"4","/home/ubox57/Videos/socketProject/client/src/components/chat/Chat.js":"5","/home/ubox57/Videos/socketProject/client/src/components/layout/Navbar.js":"6","/home/ubox57/Videos/socketProject/client/src/components/Auth/Login.js":"7","/home/ubox57/Videos/socketProject/client/src/components/Auth/SignUp.js":"8","/home/ubox57/Videos/socketProject/client/src/components/home/Home.js":"9","/home/ubox57/Videos/socketProject/client/src/components/layout/NavbarList.js":"10","/home/ubox57/Videos/socketProject/client/src/components/Message/Message.js":"11","/home/ubox57/Videos/socketProject/client/src/components/Input/Input.js":"12","/home/ubox57/Videos/socketProject/client/src/helper/auth.js":"13","/home/ubox57/Videos/socketProject/client/src/components/home/RoomList.js":"14","/home/ubox57/Videos/socketProject/client/src/lib/Toster.js":"15","/home/ubox57/Videos/socketProject/client/src/components/Message/DisplayMessage.js":"16","/home/ubox57/Videos/socketProject/client/src/components/home/Room.js":"17","/home/ubox57/Videos/socketProject/client/src/components/Auth/Logout.js":"18"},{"size":500,"mtime":1611900445633,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1611900445633,"results":"21","hashOfConfig":"20"},{"size":1103,"mtime":1613296176756,"results":"22","hashOfConfig":"20"},{"size":83,"mtime":1612713914708,"results":"23","hashOfConfig":"20"},{"size":1836,"mtime":1613063303140,"results":"24","hashOfConfig":"20"},{"size":1044,"mtime":1613295561443,"results":"25","hashOfConfig":"20"},{"size":2410,"mtime":1613055700903,"results":"26","hashOfConfig":"20"},{"size":3020,"mtime":1612938593652,"results":"27","hashOfConfig":"20"},{"size":3887,"mtime":1613063284905,"results":"28","hashOfConfig":"20"},{"size":504,"mtime":1613301890181,"results":"29","hashOfConfig":"20"},{"size":348,"mtime":1612714408274,"results":"30","hashOfConfig":"20"},{"size":551,"mtime":1612789242223,"results":"31","hashOfConfig":"20"},{"size":754,"mtime":1613301904291,"results":"32","hashOfConfig":"20"},{"size":394,"mtime":1611922081423,"results":"33","hashOfConfig":"20"},{"size":435,"mtime":1612714068163,"results":"34","hashOfConfig":"20"},{"size":720,"mtime":1612789245995,"results":"35","hashOfConfig":"20"},{"size":463,"mtime":1611920213587,"results":"36","hashOfConfig":"20"},{"size":619,"mtime":1613301922898,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"wsbq0c",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ubox57/Videos/socketProject/client/src/index.js",[],["80","81"],"/home/ubox57/Videos/socketProject/client/src/reportWebVitals.js",[],"/home/ubox57/Videos/socketProject/client/src/App.js",[],"/home/ubox57/Videos/socketProject/client/src/UserContext.js",[],"/home/ubox57/Videos/socketProject/client/src/components/chat/Chat.js",["82","83","84","85","86","87"],"import React, {useContext, useState, useEffect} from 'react'\nimport {UserContext} from '../../UserContext'\nimport {useParams} from 'react-router-dom'\nimport io from 'socket.io-client'\nimport Message from '../Message/Message'\nimport Input from '../Input/Input'\nimport {authHeader} from '../../helper/auth'\nimport axios from 'axios'\nlet socket;\nconst Chat = () => {\n    const ENDPOINT = 'http://localhost:3002'\n    const {user, setUser} = useContext(UserContext)\n    let {roomId, room_name} = useParams();\n    const  [message, setMessage ] = useState('') \n    const [messages, setMessages] = useState([])\n    useEffect(() => {\n        socket = io(ENDPOINT)\n            socket.emit('join', {name: user.name, roomId, userId: user._id})\n    }, [])\n    useEffect(() => {\n        const req = axios.get(`http://localhost:3002/message?roomId=${roomId}`, {\n            headers: authHeader()\n        }).then(res => {\n            setMessages(res.data)\n        }).catch(error => {\n        })\n    }, [])\n    useEffect(()=> {\n        socket.on('message', message => {\n            setMessage('')\n            setMessages([...messages, message])\n        })\n    })\n    const sendMessage = event => {\n        event.preventDefault();\n        if (message) {\n            const res = axios.post('http://localhost:3002/message', {\n                message: message, roomId: roomId\n            }, {headers: authHeader()}).then(response => {\n                setMessage('')  \n            }).catch(error => {\n            })\n        }\n    }        \n    return (\n        <div className=\"outerContainer\">\n            <div className=\"container\">\n                <Message messages={messages} user_id={user._id} />\n                <Input message={message} setMessage={setMessage} sendMessage={sendMessage} /> \n            </div>\n        </div>\n    )\n}\n\nexport default Chat","/home/ubox57/Videos/socketProject/client/src/components/layout/Navbar.js",["88","89"],"import React, {useState, useEffect} from 'react'\nimport {checkAuthorizationToken} from '../../helper/auth'\nimport NavbarList from './NavbarList'\nconst Navbar = () => {\n    const  [loginStatus, setLoginStatus ] = useState('') \n    useEffect(() => {\n        let status = checkAuthorizationToken()\n            console.log(status)\n            setLoginStatus(status)    \n    }, )\n    return (\n        <div>\n             <nav className=\"green\">\n                <div className=\"nav-wrapper\">\n                <a href=\"/\" className=\"brand-logo\">Chat</a>\n                <a href=\"#\" data-target=\"mobile-demo\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a>\n                <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n                    <NavbarList loginStatus={loginStatus}/>\n                </ul>\n                </div>\n            </nav>\n            <ul className=\"sidenav\" id=\"mobile-demo\">\n                <NavbarList loginStatus={loginStatus}/>\n            </ul>\n        </div>\n    )\n}\n\nexport default Navbar\n","/home/ubox57/Videos/socketProject/client/src/components/Auth/Login.js",["90"],"import React, {useState, useContext} from 'react'\nimport {UserContext} from '../../UserContext'\nimport {Redirect} from 'react-router-dom'\nimport axios from 'axios'\nconst Login = (props) => {\n    const {user, setUser} = useContext(UserContext)\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [emailError, setEmailError] = useState('')\n    const [passwordError, setPasswordError] = useState('')\n    const submitHandler = async e => {\n        e.preventDefault()\n        setEmailError('')\n        setPasswordError('')\n        try {\n            axios.post('http://localhost:3002/login', {\n            email, password,\n        }).then(response => {\n            let accessToken = response.headers.authorization\n            localStorage.setItem('accessToken', accessToken)\n            props.history.push('/')\n        }).catch(err => {\n            console.log(err.response)\n            setEmailError(err.response.data.email)\n            setPasswordError(err.response.data.password)\n        })\n        } catch (error) {\n            \n        }\n    }\n    if (user) {\n        return <Redirect to=\"/\" />\n    }\n    return (\n        <div>\n            <div className=\"row\">\n                <form className=\"col s12\" onSubmit={submitHandler}>\n                    <div className=\"row\">\n                        <div className=\"input-field col s12\">\n                            <input id=\"email\" type=\"email\" className=\"validate\"\n                            value={email} onChange={e => setEmail(e.target.value)} />\n                            <div className=\"email error red-text\">{emailError}</div>\n                            <label htmlFor=\"email\">Email</label>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"input-field col s12\">\n                            <input id=\"password\" type=\"password\" className=\"validate\"\n                            value={password} onChange={e => setPassword(e.target.value)} />\n                            <div className=\"password error red-text\">{passwordError}</div>\n                            <label htmlFor=\"password\">Password</label>\n                        </div>\n                    </div>\n                    <button className=\"btn\"> Sign Up</button>\n                </form>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Login\n","/home/ubox57/Videos/socketProject/client/src/components/Auth/SignUp.js",["91","92","93"],"import React, {useState, useContext} from 'react'\nimport {UserContext} from '../../UserContext'\nimport axios from 'axios'\nconst SignUp = (props) => {\n    const {user, setUser} = useContext(UserContext)\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [nameError, setNameError] = useState('') \n    const [emailError, setEmailError] = useState('')\n    const [passwordError, setPasswordError] = useState('')\n    const submitHandler = e => {\n        e.preventDefault()\n        setEmailError('')\n        setNameError('')\n        setPasswordError('')\n        try {\n            const res = axios.post('http://localhost:3002/signup', {\n                name, email, password\n            }).then(response => {\n                if (response.data.userData) {\n                    props.history.push('/login')\n                } else {\n\n                }\n            }).catch(error => {\n                console.log(error.response)\n                setEmailError(error.response.data.email)\n                setNameError(error.response.data.name)\n                setPasswordError(error.response.data.password)\n            })\n        } catch (error) {\n            console.log('outside catch', error)\n        }\n    }\n    return (\n        <div>\n            <div className=\"row\">\n                <form className=\"col s12\" onSubmit={submitHandler}>\n                    <div className=\"row\">\n                        <div className=\"input-field col s12\">\n                            <input id=\"name\" type=\"text\" className=\"validate\"\n                            value={name} onChange={e => setName(e.target.value)} />\n                            <div className=\"name error red-text\">{nameError}</div>\n                            <label htmlFor=\"name\">Name</label>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"input-field col s12\">\n                            <input id=\"email\" type=\"email\" className=\"validate\"\n                            value={email} onChange={e => setEmail(e.target.value)} />\n                            <div className=\"email error red-text\">{emailError}</div>\n                            <label htmlFor=\"email\">Email</label>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"input-field col s12\">\n                            <input id=\"password\" type=\"password\" className=\"validate\"\n                            value={password} onChange={e => setPassword(e.target.value)} />\n                            <div className=\"password error red-text\">{passwordError}</div>\n                            <label htmlFor=\"password\">Password</label>\n                        </div>\n                    </div>\n                    <button className=\"btn\"> Sign Up</button>\n                </form>\n            </div>\n\n        </div>\n    )\n}\n\nexport default SignUp\n","/home/ubox57/Videos/socketProject/client/src/components/home/Home.js",["94","95","96","97","98","99"],"import React, { useContext, useState, useEffect } from 'react'\nimport {UserContext} from '../../UserContext'\nimport {Link} from 'react-router-dom'\nimport RoomList from './RoomList'\nimport io from 'socket.io-client'\nimport {authHeader} from '../../helper/auth'\nimport axios from 'axios'\nimport makeToast from '../../lib/Toster'\nlet socket;    \nexport const Home = () => {\n    const ENDPOINT = 'http://127.0.0.1:3002'\n    const {user, setUser} = useContext(UserContext)\n    const [room, setRoom] = useState('');\n    const [rooms, setRooms] = useState([])\n    const [roomError, setRoomError] = useState('')\n    useEffect(() => {\n        socket = io(ENDPOINT)\n        return() => {\n            socket.emit('disconnect')\n            socket.off()\n        }\n    }, [ENDPOINT])\n    const token = authHeader()\n    useEffect(async() => {\n        try {\n            axios.get('http://localhost:3002/currentUser', {\n                headers: authHeader()\n            }).then(res => {\n            setUser(res.data)\n            }).catch(error => {\n            })\n        } catch (error) {\n            \n        }\n    }, [])\n    useEffect(async() => {\n        try {\n            axios.get('http://localhost:3002/room', {\n                headers: authHeader()\n            }).then(res => {\n                console.log(res.data.rooms)\n                setRooms(res.data.rooms)\n            }).catch(error => {\n\n                console.log(error.response)\n            })\n        } catch (error) {\n            console.log(error.response)\n        }\n    }, [])\n    const handleSubmit = async e => {\n        try {\n            e.preventDefault();\n            const res = await axios.post('http://localhost:3002/room', {\n                // credentials: 'include',\n                // method: 'POST',\n                name: room\n            }, {headers: authHeader()}).then(response => {\n                makeToast(\"success\", \"room created sucessfully\")                \n            })\n        } catch (error) {\n            setRoomError(error.response.data.error)\n            console.log(error.response)\n        }\n    }\n    \n    useEffect(()=> {\n        let userData = user\n        socket.on('room-created', room => {\n            makeToast(\"success\", `${userData.name} created a new room ${room.name}`)\n            setRoom('')\n            setRooms([...rooms, room])\n        })\n    }, [rooms])\n    return (\n        <div>        \n            <div className=\"row\">\n                <div className=\"col s12 m6\">\n                <div className=\"card blue-grey darken-1\">\n                    <div className=\"card-content white-text\">\n                    <span className=\"card-title\">Welcome {user ? user.name : ''}</span>\n                    <form onSubmit={handleSubmit}>\n                        <div className=\"row\">\n                            <div className=\"input-field col s12\">\n                            <input placeholder=\"Enter a room Name\" id=\"room\" \n                            type=\"text\" value={room} onChange= {e => setRoom(e.target.value)} />\n                            <div className=\"email error red-text\">{roomError}</div>\n                            <label forhtml=\"room\">Room</label>\n                            </div>\n                        </div>\n                        <button className=\"btn\">Create Room</button>\n                    </form>\n                    </div>\n                    <div className=\"card-action\">\n                    {/* <a href=\"#\" onClick={setAsJohn}>set as john</a>\n                    <a href=\"#\" onClick={setAsTom}>set as tom</a> */}\n                    </div>\n                </div>\n                </div>\n                <div className=\"col s6 m5 offset-1\">\n                    <RoomList rooms={rooms} />\n                </div>\n            </div>\n        <Link to={'/chat'}>\n            <button>go to chat</button>\n        </Link>\n        </div>\n    )\n}\nexport default Home","/home/ubox57/Videos/socketProject/client/src/components/layout/NavbarList.js",[],"/home/ubox57/Videos/socketProject/client/src/components/Message/Message.js",[],"/home/ubox57/Videos/socketProject/client/src/components/Input/Input.js",[],"/home/ubox57/Videos/socketProject/client/src/helper/auth.js",[],"/home/ubox57/Videos/socketProject/client/src/components/home/RoomList.js",[],"/home/ubox57/Videos/socketProject/client/src/lib/Toster.js",[],"/home/ubox57/Videos/socketProject/client/src/components/Message/DisplayMessage.js",[],"/home/ubox57/Videos/socketProject/client/src/components/home/Room.js",[],"/home/ubox57/Videos/socketProject/client/src/components/Auth/Logout.js",["100","101","102"],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":12,"column":18,"nodeType":"109","messageId":"110","endLine":12,"endColumn":25},{"ruleId":"107","severity":1,"message":"111","line":13,"column":18,"nodeType":"109","messageId":"110","endLine":13,"endColumn":27},{"ruleId":"112","severity":1,"message":"113","line":19,"column":8,"nodeType":"114","endLine":19,"endColumn":10,"suggestions":"115"},{"ruleId":"107","severity":1,"message":"116","line":21,"column":15,"nodeType":"109","messageId":"110","endLine":21,"endColumn":18},{"ruleId":"112","severity":1,"message":"117","line":27,"column":8,"nodeType":"114","endLine":27,"endColumn":10,"suggestions":"118"},{"ruleId":"107","severity":1,"message":"119","line":37,"column":19,"nodeType":"109","messageId":"110","endLine":37,"endColumn":22},{"ruleId":"112","severity":1,"message":"120","line":6,"column":5,"nodeType":"109","endLine":6,"endColumn":14,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":16,"column":17,"nodeType":"124","endLine":16,"endColumn":83},{"ruleId":"107","severity":1,"message":"108","line":6,"column":18,"nodeType":"109","messageId":"110","endLine":6,"endColumn":25},{"ruleId":"107","severity":1,"message":"125","line":5,"column":12,"nodeType":"109","messageId":"110","endLine":5,"endColumn":16},{"ruleId":"107","severity":1,"message":"108","line":5,"column":18,"nodeType":"109","messageId":"110","endLine":5,"endColumn":25},{"ruleId":"107","severity":1,"message":"119","line":18,"column":19,"nodeType":"109","messageId":"110","endLine":18,"endColumn":22},{"ruleId":"107","severity":1,"message":"126","line":23,"column":11,"nodeType":"109","messageId":"110","endLine":23,"endColumn":16},{"ruleId":"112","severity":1,"message":"127","line":24,"column":15,"nodeType":"128","endLine":35,"endColumn":6},{"ruleId":"112","severity":1,"message":"129","line":35,"column":8,"nodeType":"114","endLine":35,"endColumn":10,"suggestions":"130"},{"ruleId":"112","severity":1,"message":"127","line":36,"column":15,"nodeType":"128","endLine":50,"endColumn":6},{"ruleId":"107","severity":1,"message":"119","line":54,"column":19,"nodeType":"109","messageId":"110","endLine":54,"endColumn":22},{"ruleId":"112","severity":1,"message":"131","line":74,"column":8,"nodeType":"114","endLine":74,"endColumn":15,"suggestions":"132"},{"ruleId":"107","severity":1,"message":"133","line":1,"column":9,"nodeType":"109","messageId":"110","endLine":1,"endColumn":20},{"ruleId":"107","severity":1,"message":"134","line":2,"column":30,"nodeType":"109","messageId":"110","endLine":2,"endColumn":40},{"ruleId":"107","severity":1,"message":"135","line":4,"column":8,"nodeType":"109","messageId":"110","endLine":4,"endColumn":13},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'setUser' is assigned a value but never used.","Identifier","unusedVar","'room_name' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'roomId', 'user._id', and 'user.name'. Either include them or remove the dependency array.","ArrayExpression",["138"],"'req' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'roomId'. Either include it or remove the dependency array.",["139"],"'res' is assigned a value but never used.","React Hook useEffect contains a call to 'setLoginStatus'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["140"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'user' is assigned a value but never used.","'token' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'setUser'. Either include it or remove the dependency array.",["141"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["142"],"'UserContext' is defined but never used.","'useContext' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},"Update the dependencies array to be: [roomId, user._id, user.name]",{"range":"153","text":"154"},"Update the dependencies array to be: [roomId]",{"range":"155","text":"156"},"Add dependencies array: []",{"range":"157","text":"158"},"Update the dependencies array to be: [setUser]",{"range":"159","text":"160"},"Update the dependencies array to be: [rooms, user]",{"range":"161","text":"162"},[739,741],"[roomId, user._id, user.name]",[986,988],"[roomId]",[371,371],", []",[1103,1105],"[setUser]",[2348,2355],"[rooms, user]"]